name: Lambda CI

on:
  push:
    branches: [ "main" ]

jobs:

  build:

    name: Build Image, Push to ECR, and update Lambda
    runs-on: ubuntu-latest

    steps:
    - name: Check Out Code
      uses: actions/checkout@v3

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION}}

    - name: Login to AWS ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, Tag, and Push Image to AWS ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: pixlet
        IMAGE_TAG: latest
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

    - name: Deploy Lambda Function
      uses: appleboy/lambda-action@v0.1.5
      with:
        aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws_region: ${{ secrets.AWS_REGION}}
        function_name: pixlet-messages
        image_uri: ${{ steps.login-ecr.outputs.registry }}/pixlet:latest
        role: arn:aws:iam::914884994734:role/service-role/pixlet-messages-role-edow8tqk
        timeout: 10
        environment: TIDBYT_API_TOKEN=${{ secrets.TIDBYT_API_TOKEN }},TIDBYT_DEVICE_ID=${{ secrets.TIDBYT_DEVICE_ID }}
        dry_run: true
        debug: true
